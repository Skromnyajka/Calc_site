#Импорт библиотеке для работы с данными
import pandas as pd

#Создадим таблицы со значениями для локальной и интегральной формул лапласа
def loc_data(x, y):
    data = {
            0: [0.39894, 0.39695, 0.39104, 0.38139, 0.36827, 0.35207, 0.33322, 0.31225, 0.28969, 0.26609, 0.24197, 0.21785,
                0.19419, 0.17137, 0.14973, 0.12952, 0.11092, 0.09405, 0.07895, 0.06562, 0.05339, 0.04398, 0.03547, 0.02833,
                0.02239, 0.01753, 0.01358, 0.01042, 0.00792, 0.00595, 0.00443, 0.00327, 0.00238, 0.00172, 0.00123, 0.00087,
                0.00061, 0.00042, 0.00029, 0.00020, 0.0001338],
            1: [0.39892, 0.39654, 0.39024, 0.38023, 0.36678, 0.35029, 0.33121, 0.31006, 0.28737, 0.26369, 0.23955, 0.21546,
                0.19186, 0.16915, 0.14764, 0.12758, 0.10915, 0.09246, 0.07754, 0.06438, 0.05292, 0.04307, 0.03470, 0.02768,
                0.02186, 0.01709, 0.01323, 0.01014, 0.00770, 0.00578, 0.00430, 0.00317, 0.00231, 0.00167, 0.00119, 0.00084,
                0.00059, 0.00041, 0.00028, 0.00019, 0],
            2: [0.39886, 0.39608, 0.38940, 0.37903, 0.36526, 0.34849, 0.32918, 0.30785, 0.28504, 0.26129, 0.23713, 0.21307,
                0.18954, 0.16694, 0.14556, 0.12566, 0.10741, 0.09089, 0.07614, 0.06316, 0.05186, 0.04217, 0.03394, 0.02705,
                0.02134, 0.01667, 0.01289, 0.00987, 0.00748, 0.00562, 0.00417, 0.00307, 0.00224, 0.00161, 0.00115, 0.00081,
                0.00057, 0.00039, 0.00027, 0.00018, 0.0000589],
            3: [0.39876, 0.39559, 0.38853, 0.37780, 0.36371, 0.34667, 0.32713, 0.30563, 0.28269, 0.25888, 0.23471, 0.21069,
                0.18724, 0.16474, 0.14350, 0.12376, 0.10567, 0.08933, 0.07477, 0.06195, 0.05082, 0.04128, 0.03319, 0.02643,
                0.02083, 0.01625, 0.01256, 0.00961, 0.00727, 0.00545, 0.00405, 0.00298, 0.00216, 0.00156, 0.00111, 0.00079,
                0.00055, 0.00038, 0.00026, 0.00018, 0],
            4: [0.39862, 0.39505, 0.38762, 0.37654, 0.36213, 0.34482, 0.32506, 0.30339, 0.28034, 0.25647, 0.23230, 0.20831,
                0.18494, 0.16256, 0.14146, 0.12188, 0.10396, 0.08780, 0.07341, 0.06077, 0.04980, 0.04041, 0.03246, 0.02582,
                0.02033, 0.01585, 0.01223, 0.00935, 0.00707, 0.00530, 0.00393, 0.00288, 0.00210, 0.00151, 0.00107, 0.00076,
                0.00053, 0.00037, 0.00025, 0.00017, 0.0000249],
            5: [0.39844, 0.39448, 0.38667, 0.37524, 0.36053, 0.34294, 0.32297, 0.30114, 0.27798, 0.25406, 0.22988, 0.20594,
                0.18265, 0.16038, 0.13943, 0.12001, 0.10226, 0.08628, 0.07206, 0.05959, 0.04879, 0.03955, 0.03174, 0.02522,
                0.01984, 0.01545, 0.01191, 0.00909, 0.00687, 0.00514, 0.00381, 0.00279, 0.00203, 0.00146, 0.00104, 0.00073,
                0.00051, 0.00035, 0.00024, 0.00016, 0],
            6: [0.39822, 0.39387, 0.38568, 0.37391, 0.35889, 0.34105, 0.32086, 0.29887, 0.27562, 0.25164, 0.22747, 0.20357,
                0.18037, 0.15822, 0.13742, 0.11816, 0.10059, 0.08478, 0.07074, 0.05844, 0.04780, 0.03871, 0.03103, 0.02463,
                0.01936, 0.01506, 0.01160, 0.00885, 0.00668, 0.00499, 0.00370, 0.00271, 0.00196, 0.00141, 0.00100, 0.00071,
                0.00049, 0.00034, 0.00023, 0.00016, 0.0000101],
            7: [0.39797, 0.39322, 0.38466, 0.37255, 0.35723, 0.33912, 0.31874, 0.29659, 0.27324, 0.24923, 0.22506, 0.20121,
                0.17810, 0.15608, 0.13542, 0.11632, 0.09893, 0.08329, 0.06943, 0.05730, 0.04682, 0.03788, 0.03034, 0.02406,
                0.01888, 0.01468, 0.01130, 0.00861, 0.00649, 0.00485, 0.00358, 0.00262, 0.00190, 0.00136, 0.00097, 0.00068,
                0.00047, 0.00033, 0.00022, 0.00015, 0],
            8: [0.39767, 0.39253, 0.38361, 0.37115, 0.35553, 0.33718, 0.31659, 0.29431, 0.27086, 0.24681, 0.22265, 0.19886,
                0.17585, 0.15395, 0.13344, 0.11450, 0.09728, 0.08183, 0.06814, 0.05618, 0.04586, 0.03706, 0.02965, 0.02349,
                0.01842, 0.01431, 0.01100, 0.00837, 0.00631, 0.00470, 0.00348, 0.00254, 0.00184, 0.00132, 0.00094, 0.00066,
                0.00046, 0.00031, 0.00021, 0.00014, 0.0000040],
            9: [0.39733, 0.39181, 0.38251, 0.36973, 0.35381, 0.33521, 0.31443, 0.29200, 0.26848, 0.24439, 0.22025, 0.19652,
                0.17360, 0.15183, 0.13147, 0.11270, 0.09566, 0.08038, 0.06687, 0.05508, 0.04491, 0.03626, 0.02898, 0.02294,
                0.01797, 0.01394, 0.01071, 0.00814, 0.00613, 0.00457, 0.00337, 0.00246, 0.00178, 0.00127, 0.00090, 0.00063,
                0.00044, 0.00030, 0.00021, 0.00014, 0]
        }
    row_labels = [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9,
                  2.0, 2.1, 2.2, 2.3, 2.4, 2.5, 2.6, 2.7, 2.8, 2.9, 3.0, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9,
                  4.0]
    df = pd.DataFrame(data=data, index=row_labels)

    x = str(x)
    x = float(x[:3]) if len(x) > 3 else float(x)

    return df.at[x, y]

def int_data(x, y):
    data = {
            0: [0, 0.03983, 0.07926, 0.11791, 0.15542, 0.19146, 0.22575, 0.25804, 0.28814, 0.31594, 0.34134, 0.36433,
                0.38493, 0.40320, 0.41924, 0.43319, 0.44520, 0.45543, 0.46407, 0.47128, 0.47725, 0.48214, 0.48610, 0.48928,
                0.49180, 0.49379, 0.49534, 0.49653, 0.49744, 0.49813, 0.49865, 0.49903, 0.49931, 0.49952, 0.49966, 0.49977,
                0.49984, 0.49989, 0.49993, 0.49995, 0.4999683, 0.4999997],
            1: [0.00399, 0.04380, 0.08317, 0.12172, 0.15910, 0.19497, 0.22907, 0.26115, 0.29103, 0.31859, 0.34375, 0.36650,
                0.38686, 0.40490, 0.42073, 0.43448, 0.44630, 0.45637, 0.46485, 0.47193, 0.47778, 0.48257, 0.48645, 0.48956,
                0.49202, 0.49396, 0.49547, 0.49664, 0.49752, 0.49819, 0.49869, 0.49906, 0.49934, 0.49953, 0.49968, 0.49978,
                0.49985, 0.49990, 0.49993, 0.49995, 0.5, 0.5],
            2: [0.00798, 0.04776, 0.08706, 0.12552, 0.16276, 0.19847, 0.23237, 0.26424, 0.29389, 0.32121, 0.34614, 0.36864,
                0.38877, 0.40658, 0.42220, 0.43574, 0.44738, 0.45728, 0.46562, 0.47257, 0.47831, 0.48300, 0.48679, 0.48983,
                0.49224, 0.49413, 0.49560, 0.49674, 0.49760, 0.49825, 0.49874, 0.49910, 0.49936, 0.49955, 0.49969, 0.49978,
                0.49985, 0.49990, 0.49993, 0.49996, 0.4999867, 0.5],
            3: [0.01197, 0.05172, 0.09095, 0.12930, 0.16640, 0.20194, 0.23565, 0.26730, 0.29673, 0.32381, 0.34850, 0.37076,
                0.39065, 0.40824, 0.42364, 0.43699, 0.44845, 0.45818, 0.46638, 0.47320, 0.47882, 0.48341, 0.48713, 0.49010,
                0.49245, 0.49430, 0.49573, 0.49683, 0.49767, 0.49831, 0.49878, 0.49913, 0.49938, 0.49957, 0.49970, 0.49979,
                0.49986, 0.49990, 0.49994, 0.49996, 0.5, 0.5],
            4: [0.01595, 0.05567, 0.09483, 0.13307, 0.17003, 0.20540, 0.23891, 0.27035, 0.29955, 0.32639, 0.35083, 0.37286,
                0.39251, 0.40988, 0.42507, 0.43822, 0.44950, 0.45907, 0.46712, 0.47381, 0.47932, 0.48382, 0.48745, 0.49036,
                0.49266, 0.49446, 0.49585, 0.49693, 0.49774, 0.49836, 0.49882, 0.49916, 0.49940, 0.49958, 0.49971, 0.49980,
                0.49986, 0.49991, 0.49994, 0.49996, 0.4999946, 0.5],
            5: [0.01994, 0.05962, 0.09871, 0.13683, 0.17364, 0.20884, 0.24215, 0.27337, 0.30234, 0.32894, 0.35314, 0.37493,
                0.39435, 0.41149, 0.42647, 0.43943, 0.45053, 0.45994, 0.46784, 0.47441, 0.47982, 0.48422, 0.48778, 0.49061,
                0.49286, 0.49461, 0.49598, 0.49702, 0.49781, 0.49841, 0.49886, 0.49918, 0.49942, 0.49960, 0.49972, 0.49981,
                0.49987, 0.49991, 0.49994, 0.49996, 0.5, 0.5],
            6: [0.02392, 0.06356, 0.10257, 0.14058, 0.17724, 0.21226, 0.24537, 0.27637, 0.30511, 0.33147, 0.35543, 0.37698,
                0.39617, 0.41308, 0.42786, 0.44062, 0.45154, 0.46080, 0.46856, 0.47500, 0.48030, 0.48461, 0.48809, 0.49086,
                0.49305, 0.49477, 0.49609, 0.49711, 0.49788, 0.49846, 0.49889, 0.49921, 0.49944, 0.49961, 0.49973, 0.49981,
                0.49987, 0.49992, 0.49994, 0.49996, 0.4999946, 0.5],
            7: [0.02790, 0.06749, 0.10642, 0.14431, 0.18082, 0.21566, 0.24857, 0.27935, 0.30785, 0.33398, 0.35769, 0.37900,
                0.39796, 0.41466, 0.42922, 0.44179, 0.45254, 0.46164, 0.46926, 0.47558, 0.48077, 0.48500, 0.48840, 0.49111,
                0.49324, 0.49492, 0.49621, 0.49720, 0.49795, 0.49851, 0.49893, 0.49924, 0.49946, 0.49962, 0.49974, 0.49982,
                0.49988, 0.49992, 0.49995, 0.49996, 0.5, 0.5],
            8: [0.03188, 0.07142, 0.11026, 0.14803, 0.18439, 0.21904, 0.25175, 0.28230, 0.31057, 0.33646, 0.35993, 0.38100,
                0.39973, 0.41621, 0.43056, 0.44295, 0.45352, 0.46246, 0.46995, 0.47615, 0.48124, 0.48537, 0.48870, 0.49134,
                0.49343, 0.49506, 0.49632, 0.49728, 0.49801, 0.49856, 0.49897, 0.49926, 0.49948, 0.49964, 0.49975, 0.49983,
                0.49988, 0.49992, 0.49995, 0.49997, 0.4999992, 0.5],
            9: [0.03586, 0.07535, 0.11409, 0.15173, 0.18793, 0.22240, 0.25490, 0.28524, 0.31327, 0.33891, 0.36214, 0.38298,
                0.40147, 0.41774, 0.43189, 0.44408, 0.45449, 0.46327, 0.47062, 0.47670, 0.48169, 0.48574, 0.48899, 0.49158,
                0.49361, 0.49520, 0.49643, 0.49736, 0.49807, 0.49861, 0.49900, 0.49929, 0.49950, 0.49965, 0.49976, 0.49983,
                0.49989, 0.49992, 0.49995, 0.49997, 0.5, 0.5]
        }
    row_labels = [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9,
                  2.0, 2.1, 2.2, 2.3, 2.4, 2.5, 2.6, 2.7, 2.8, 2.9, 3.0, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9,
                  4.0, 5.0]
    df = pd.DataFrame(data=data, index=row_labels)

    x = str(x)
    x = float(x[:3]) if len(x) > 3 else float(x)

    return df.at[x, y]